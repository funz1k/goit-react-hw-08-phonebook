{"version":3,"file":"static/js/422.17a1e304.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 5px;\n  border: 2px solid #77767628;\n  border-radius: 5px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.07);\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 22px;\n  text-align: center;\n  margin: 40px 0;\n`;","import React from 'react';\nimport { Title, Section } from './Container.styled';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ title, children }) => (\n    <Section>\n        <Title>{title}</Title>\n        {children}\n    </Section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n\nexport default Container;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 40px;\n    \n    @media ( max-width: 800px)  {\n        flex-direction: column;\n        align-items: center;\n    }\n`\n\nexport const Label = styled.label`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const Input = styled.input`\n    width: 200px;\n    height: 40px;\n    padding: 0 15px 0 15px;\n    border-radius: 5px;\n    border: 1px solid #d3d3d3;\n    margin-right: 40px;\n\n    &::placeholder {\n        font-style: inherit;\n        font-size: 14px;\n    }\n\n    @media ( max-width: 800px)  {\n        margin-bottom: 30px;\n        margin-right: 0;\n    }\n`;\n\nexport const Button = styled.button`\n    background-color: #1976d2;\n    min-width: 232px;\n    min-height: 40px;\n    border: none;\n    border-radius: 4px;\n    color: white;\n    box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n    font-size: 0.875rem;\n\tline-height: 1.75;\n    letter-spacing: 0.02857em;\n    text-transform: uppercase;\n    transition: all 300ms ease;\n\n    &:hover {\n        opacity: 90%;\n        color: white;\n    }\n`;","import { useState } from \"react\";\nimport { Form, Label, Input, Button } from './ContactsForm.styled'\n\nconst ContactsForm = ({ onSubmit }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onInputChange = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            case 'number':\n                setNumber(value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        onSubmit(name, number)\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label>\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={onInputChange}\n                />\n            </Label>\n            <Label>\n                <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"Phone number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={onInputChange}\n                />\n            </Label>\n            <Button type='submit'>Add contact</Button>\n        </Form>\n    )\n}\n\nexport default ContactsForm;","import styled from 'styled-components';\n\nexport const ListContainer = styled.ul`\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 50px;\n    margin-right: 50px;\n    margin-left: 50px;\n`\n\nexport const ListItem = styled.li`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 33.3% 33.3% 33.3%;\n    border-bottom: 1px solid #d3d3d3;\n    padding: 10px 0;\n    \n        &:not(:last-child) {\n        margin-bottom: 30px;\n        }\n`;\n\n// export const Contact = styled.div`\n\n//     `;\n\nexport const CloseBtn = styled.button`\n    background-color: #1976d2;\n    width: 150px;\n    min-height: 40px;\n    border: none;\n    border-radius: 4px;\n    color: white;\n    box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n    font-size: 0.875rem;\n\tline-height: 1.75;\n    letter-spacing: 0.02857em;\n    text-transform: uppercase;\n    transition: all 300ms ease;\n    margin-left: auto;\n\n\n    &:hover {\n        opacity: 90%;\n    }\n`;\n\nexport const ContactName = styled.span`\n    font-size: 20px;\n    font-weight: 500;\n`\n\nexport const ContactNumber = styled.span`\n    font-size: 18px;\n`","import { PropTypes } from 'prop-types';\nimport { ListItem, CloseBtn, ContactName, ContactNumber, ListContainer } from './ContactList.styled';\nimport { useDeleteContactMutation } from 'redux/contacts/ContactSlice'\n\nconst ContactList = ({ contacts }) => {\n    const [deleteContact] = useDeleteContactMutation();\n    return (\n        <ListContainer>\n            {contacts && contacts.map(({ name, number, id }) => {\n                return (\n                    <ListItem key={id}>\n                        <ContactName>{name}</ContactName>\n                        <ContactNumber>{number}</ContactNumber>\n                        <CloseBtn type=\"button\" onClick={() => deleteContact(id)}>\n                            Delete\n                        </CloseBtn>\n                    </ListItem>\n                )\n            })}\n        </ListContainer>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.array,\n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const Filter = styled.input`\n    width: 250px;\n    height: 40px;\n    padding: 0 15px 0 15px;\n    border-radius: 5px;\n    border: 1px solid #d3d3d3;\n`;\n\nexport const FilterLabel = styled.label`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 40px;\n`;","import { PropTypes } from 'prop-types';\nimport { Filter, FilterLabel } from './ContactsFilter.styled'\n\nconst ContactsFilter = ({ filter, onChange }) => {\n\n    return (\n        <FilterLabel htmlFor=\"\">\n            <Filter\n                type=\"text\"\n                placeholder=\"Find contacts by name\"\n                value={filter}\n                onChange={onChange} />\n        </FilterLabel>\n    )\n}\n\nContactsFilter.propTypes = {\n    filter: PropTypes.string,\n};\n\nexport default ContactsFilter;","import Container from 'components/Container';\nimport ContactsForm from \"components/ContactsForm\";\nimport ContactList from 'components/ContactList';\nimport ContactsFilter from 'components/ContactsFilter';\nimport { LineWave } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport { useGetContactsQuery, useCreateContactMutation } from 'redux//contacts/ContactSlice'\n\nconst Contacts = () => {\n    const [filter, setFilter] = useState('');\n    const [createContact] = useCreateContactMutation();\n    const { data, isFetching } = useGetContactsQuery();\n\n    const changeFilter = event => {\n        setFilter(event.currentTarget.value);\n    };\n\n    const addContact = (name, number) => {\n        const contact = {\n            name,\n            number,\n        }\n        const findContact = data.find(contact =>\n            contact.name.toLowerCase().includes(name.toLowerCase())\n        );\n\n        findContact\n            ? alert('This name is already in contact')\n            : createContact(contact);\n    }\n\n    const visibleContacts = () => {\n        const normalizeFilter = filter.toLowerCase();\n\n        if (data) {\n            if (data.length !== 0) {\n                return data.filter(contact =>\n                    contact.name.toLowerCase().includes(normalizeFilter)\n                );\n            }\n        }\n        return;\n    };\n\n    return (\n        <>\n            <Container title='Add Contact'>\n                <ContactsForm onSubmit={addContact} />\n            </Container>\n            <Container title='Contacts'>\n                <ContactsFilter filter={filter} onChange={changeFilter} />\n                {isFetching ? (<LineWave width=\"300\" height=\"200\" color=\"#1976d2\" />) : <ContactList contacts={visibleContacts()} />}\n            </Container>\n        </>\n    );\n};\n\nexport default Contacts;"],"names":["Section","styled","Title","propTypes","title","PropTypes","children","Form","Label","Input","Button","onSubmit","useState","name","setName","number","setNumber","onInputChange","e","currentTarget","value","reset","preventDefault","type","placeholder","pattern","required","onChange","ListContainer","ListItem","CloseBtn","ContactName","ContactNumber","contacts","useDeleteContactMutation","deleteContact","map","id","onClick","Filter","FilterLabel","filter","htmlFor","setFilter","useCreateContactMutation","createContact","useGetContactsQuery","data","isFetching","contact","findContact","find","toLowerCase","includes","alert","event","width","height","color","normalizeFilter","length","visibleContacts"],"sourceRoot":""}