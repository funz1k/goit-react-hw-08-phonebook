{"version":3,"file":"static/js/319.06f8c4db.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/AppContainer/AppContainer.styled.jsx","components/AppContainer/AppContainer.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.div`\n  padding: 20px 30px;\n  margin-bottom: 5px;\n  border: 2px solid #77767628;\n  border-radius: 5px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.07);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 20px 0;\n`;","import React from 'react';\nimport { Title, Section } from './Container.styled';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ title, children }) => (\n    <Section>\n        <Title>{title}</Title>\n        {children}\n    </Section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n\nexport default Container;","import styled from 'styled-components';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  padding: 10px 15px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 56px;\n`;","import React from 'react';\nimport { Title, Section } from './AppContainer.styled';\nimport PropTypes from 'prop-types';\n\nconst AppContainer = ({ title, children }) => (\n    <Section>\n        <Title>{title}</Title>\n        {children}\n    </Section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};\n\nexport default AppContainer;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: space-around;\n`\n\nexport const Label = styled.label`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const Input = styled.input`\n    width: 150px;\n    height: 30px;\n    padding: 0 15px 0 15px;\n    border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n    width: 200px;\n    height: auto;\n    border-radius: 5px;\n    font-weight: 600;\n    color: #1d628b;\n    cursor: pointer;\n    background-color: transparent;\n    border: 1px solid #1d628b;\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.07);\n    transition: all 300ms ease;\n    &:hover {\n        background-color: #1d628b;\n        color: white;\n    }\n`;","import { useState } from \"react\";\nimport { Form, Label, Input, Button } from './ContactsForm.styled'\n\nconst ContactsForm = ({ onSubmit }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onInputChange = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            case 'number':\n                setNumber(value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        onSubmit(name, number)\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label>\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={onInputChange}\n                />\n            </Label>\n            <Label>\n                <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"Phone number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={onInputChange}\n                />\n            </Label>\n            <Button type='submit'>Add contact</Button>\n        </Form>\n    )\n}\n\nexport default ContactsForm;","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    border-bottom: 1px solid black;\n    padding: 10px 0;\n`;\n\nexport const Contact = styled.p`\n    display: flex;\n    width: 50%;\n    justify-content: space-between;\n    `;\n\nexport const CloseBtn = styled.button`\n    padding: 8px 10px;\n    margin-left: auto;\n    font-size: 16px;\n    background-color: inherit;\n    border: 1px solid #1d628b;\n    border-radius: 5px;\n    cursor: pointer;\n    color: #1d628b;\n    transition: all 300ms ease;\n    &:hover {\n        background-color: #1d628b;\n        color: white;\n    }\n`;\n\nexport const ContactName = styled.span`\n    font-size: 20px;\n    font-weight: 500;\n`\n\nexport const ContactNumber = styled.span`\n    font-size: 18px;\n`","import { PropTypes } from 'prop-types';\nimport { ListItem, Contact, CloseBtn, ContactName, ContactNumber } from './ContactList.styled';\nimport { useDeleteContactMutation } from 'redux/ContactSlice'\n\nconst ContactList = ({ contacts }) => {\n    const [deleteContact] = useDeleteContactMutation();\n    return (\n        <div>\n            <ul>\n                {contacts && contacts.map(({ name, number, id }) => {\n                    return (\n                        <ListItem key={id}>\n                            <Contact>\n                                <ContactName>{name}:</ContactName>\n                                <ContactNumber>{number}</ContactNumber>\n                            </Contact>\n                            <CloseBtn type=\"button\" onClick={() => deleteContact(id)}>\n                                Delete\n                            </CloseBtn>\n                        </ListItem>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.array,\n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const Filter = styled.input`\n    width: 200px;\n    height: 30px;\n    padding: 0 15px 0 15px;\n    border-radius: 5px;\n`;\n\nexport const FilterLabel = styled.label`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 20px;\n`;","import { PropTypes } from 'prop-types';\nimport { Filter, FilterLabel } from './ContactsFilter.styled'\n\nconst ContactsFilter = ({ filter, onChange }) => {\n\n    return (\n        <FilterLabel htmlFor=\"\">\n            <Filter\n                type=\"text\"\n                placeholder=\"Find contacts by name\"\n                value={filter}\n                onChange={onChange} />\n        </FilterLabel>\n    )\n}\n\nContactsFilter.propTypes = {\n    filter: PropTypes.string,\n};\n\nexport default ContactsFilter;","import Container from 'components/Container';\nimport AppContainer from 'components/AppContainer';\nimport ContactsForm from \"components/ContactsForm\";\nimport ContactList from 'components/ContactList';\nimport ContactsFilter from 'components/ContactsFilter';\nimport { useState } from 'react';\nimport { useGetContactsQuery, useCreateContactMutation } from 'redux/ContactSlice'\n\nconst Contacts = () => {\n    const [filter, setFilter] = useState('');\n    const [createContact] = useCreateContactMutation();\n    const { data, isFetching } = useGetContactsQuery();\n\n    const changeFilter = event => {\n        setFilter(event.currentTarget.value);\n    };\n\n    const addContact = (name, number) => {\n        const contact = {\n            name,\n            number,\n        }\n        const findContact = data.find(contact =>\n            contact.name.toLowerCase().includes(name.toLowerCase())\n        );\n\n        findContact\n            ? alert('This name is already in contact')\n            : createContact(contact);\n    }\n\n    const visibleContacts = () => {\n        const normalizeFilter = filter.toLowerCase();\n\n        if (data) {\n            if (data.length !== 0) {\n                return data.filter(contact =>\n                    contact.name.toLowerCase().includes(normalizeFilter)\n                );\n            }\n        }\n        return;\n    };\n\n    return (\n        <AppContainer title=\"Phonebook\">\n            <Container title='Add Contacts:'>\n                <ContactsForm onSubmit={addContact} />\n            </Container>\n            <Container title='Contacts:'>\n                <ContactsFilter filter={filter} onChange={changeFilter} />\n                {isFetching ? (<p>Loading ...</p>) : <ContactList contacts={visibleContacts()} />}\n            </Container>\n        </AppContainer >\n    );\n};\n\nexport default Contacts;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Section","styled","Title","propTypes","title","PropTypes","children","Form","Label","Input","Button","onSubmit","useState","name","setName","number","setNumber","onInputChange","e","currentTarget","value","reset","preventDefault","type","placeholder","pattern","required","onChange","ListItem","Contact","CloseBtn","ContactName","ContactNumber","contacts","useDeleteContactMutation","deleteContact","map","id","onClick","Filter","FilterLabel","filter","htmlFor","setFilter","useCreateContactMutation","createContact","useGetContactsQuery","data","isFetching","contact","findContact","find","toLowerCase","includes","alert","event","normalizeFilter","length","visibleContacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}